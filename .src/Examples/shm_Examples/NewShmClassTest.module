' Gambas module file

' Public Struct dInteger
'   Length As Long                       '' Length including header
'   Address As Long                      '' The virtual address of this block, speed pointer conversion
'   Type As Integer                      '' Type of memory
'   Value As Integer                     '' The actual value for usage
' End Struct
'Fast Unsafe
smem As ShmMem
loopcount As Integer = 1000000

Public Struct xegen
  gen2 As Integer
  gen3 As Float
  gen4 As Long
End Struct

Public Sub main()

  Dim MyVar As Variant
  Dim smem As ShmMem

  smem = New ShmMem(1000000, "MyTestMem", 100, 0.01, True)
  With smem
    !cats = 45
    Dim result As Integer
    Dim StartTime As Float = Timer
    For i As Integer = 0 To loopcount
      !cats = 45
    Next
    Print "Named write Lock/Unlock Value X " & loopcount & "   time :";; Timer - Starttime

    StartTime = Timer
    For i As Integer = 0 To loopcount
      result = !cats + 2
    Next
    Print "Named Read Lock/UnlockValue X " & loopcount & "     time :";; Timer - Starttime

    MyVar = .VarPtr("cats")

    StartTime = Timer
    For i As Integer = 0 To loopcount
      result = MyVar.value
    Next
    Print "Named Pointer Read Value X " & loopcount & "        time :";; Timer - Starttime

    StartTime = Timer
    For i As Integer = 0 To loopcount
      MyVar.value = i
    Next
    Print "Named Pointer write Value X " & loopcount & "       time :";; Timer - Starttime

    '=======================================================================================================

    smem = New ShmMem
    Print "\nUnnamed shared block, Ie. forked tasks only"
    !cats = 45

    StartTime = Timer
    For i As Integer = 0 To loopcount
      !cats = 45 * i
    Next
    Print "Write lock/unlock Value X " & loopcount & "         time :";; Timer - Starttime;; smem!cats

    StartTime = Timer
    For i As Integer = 0 To loopcount
      result = !cats + 2 * i
    Next
    Print "Read Lock/Unlock Value X " & loopcount & "          time :";; Timer - Starttime;; smem!cats

    !goat = "this is a small goat and it will eat all your grass"

    StartTime = Timer
    For i As Integer = 0 To loopcount
      !goat = "this is a small goat and it will eat all your grass"
    Next
    Print "Write lock/unlock String X " & loopcount & "        time :";; Timer - Starttime;; smem!goat

    Dim sResult As String

    StartTime = Timer
    For i As Integer = 0 To loopcount
      sResult = !goat
    Next
    Print "Read lock/unlock String X " & loopcount & "         time :";; Timer - Starttime;; smem!goat

    StartTime = Timer
    For i As Integer = 0 To loopcount
      !goat = "this is a small goat and it will eat all your grass"
      !goat = i
    Next
    Print "Change Type int -> str ->int X " & loopcount & "    time :";; Timer - Starttime;; smem!goat

    !Fox = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    !Hen = ["a", "b", "c"]
    !Riot = ["Baton": 1, "Hood": 2, "Gun": 4]
    !Short = CShort(20)
    !Byte = CByte(23)
    !Long = CLong(89)
    !boolean = True
    !integer = 45
    !float = 0.20
    !single = CSingle(1.34)
    !date = CDate("01/02/1980")
    !String = "This is a string"

    Dim xx As New Xegen
    Print xegen.name
    !Struct = New Xegen
    !Struct.gen2 = 1234
    !Struct.gen3 = 1.2
    !Struct.gen4 = 8907654

    !goat = "this is a small goat and it will eat all your grass"

    .Print()

  End With

End
