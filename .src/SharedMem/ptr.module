' Gambas module file

'Author Westwood JustLostintime
'Released Under:
'  GNU GENERAL Public LICENSE
'  Version 3, 29 June 2007
'  See project license file.
Export
'Fast Unsafe
Extern strncpy(dest As String, src As String, count As Integer) As Pointer In "libc:6"
'Extern memcpy(dest As Pointer, src As Pointer, count As Integer) As Pointer In "libc:6"

'' This function returns a pointer to a strings content
'' as for some reason gambas will not do a varptr of a string
'' go figure...
'' Also remember that strings in gambas are static,
'' So you must get a new address everytime the string is altered
Public Sub str(Var As String) As Pointer

  Return strncpy(Var, Var, 0)

End

'' This function returns a pointer to the data portion of an array
'' Be carefull using this as every array type has a gambas specific
'' memory format, so understand that before using this
Public Sub Array(var As Object) As Pointer

  Return var.data

End

'' this function allocates memory blocks and creates a static copy of the
'' object data to pass to a c function, or transmit via ssh
'' This is very very slow slow.....

Public Sub Object(var As Object) As Pointer

  Dim fLength As Integer
  Dim mFile As File
  Dim mMemPtr As Pointer

  mFile = Open Null For Write
  Write #mFile, var As Object
  fLength = Seek(mFile)
  Close mFile

  mMemPtr = Alloc(fLength, 1)
  mFile = Memory mMemPtr For Write
  Write #mFile, var As Object
  Close mFile

  'Debug mem.DumpMem(mMemPtr, fLength, "MEM" & Object.Class(var).Name)
  Return mMemPtr

End
